{
  "components": [
    {
      "label": "Business Hours Description",
      "autoExpand": false,
      "tableView": true,
      "key": "hoursInput",
      "type": "textarea",
      "input": true,
      "placeholder": "e.g., we're open Monday-Friday 9-5, closed for lunch 12-1, weekends 10-3",
      "rows": 4,
      "validate": {
        "required": true
      }
    },
    {
      "label": "Parse Hours",
      "action": "custom",
      "showValidations": false,
      "tableView": false,
      "key": "parseButton",
      "type": "button",
      "input": true,
      "theme": "primary",
      "size": "md",
      "custom": "const hoursText = data.hoursInput;\nconst parsedHoursComponent = form.getComponent('parsedHours');\nconst parseButtonComponent = form.getComponent('parseButton');\n\n// Validate input\nif (!hoursText || hoursText.trim() === '') {\n  parsedHoursComponent.setValue('Please enter business hours description first.');\n  return;\n}\n\n// Set loading state\nparsedHoursComponent.setValue('Parsing hours...');\nparseButtonComponent.disabled = true;\nparseButtonComponent.textContent = 'Processing...';\n\n// Make API call\nfetch('https://hours-of-operation.vercel.app/api/parse-hours', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ hoursText: hoursText.trim() })\n})\n.then(response => {\n  if (!response.ok) {\n    return response.json().then(err => {\n      throw new Error(err.error || `API Error: ${response.status}`);\n    });\n  }\n  return response.json();\n})\n.then(result => {\n  // Debug: Log the result to see what we got\n  console.log('API Response:', result);\n  console.log('Result.result:', result.result);\n  \n  // Format and display result\n  const formattedHours = formatHoursForDisplay(result.result);\n  parsedHoursComponent.setValue(formattedHours);\n})\n.catch(error => {\n  console.error('Parse hours error:', error);\n  parsedHoursComponent.setValue(`Error: ${error.message}`);\n})\n.finally(() => {\n  // Re-enable button\n  parseButtonComponent.disabled = false;\n  parseButtonComponent.element.textContent = 'Parse Hours';\n});\n\n// Helper function to format hours for display\nfunction formatHoursForDisplay(parsedResult) {\n  if (!parsedResult || !parsedResult.hours || !Array.isArray(parsedResult.hours)) {\n    return 'No hours found';\n  }\n  \n  // Sort hours by day\n  const dayOrder = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const sortedHours = parsedResult.hours.sort((a, b) => {\n    return dayOrder.indexOf(a.day) - dayOrder.indexOf(b.day);\n  });\n  \n  // Format as readable text\n  return sortedHours.map(hour => {\n    if (!hour || typeof hour !== 'object') {\n      return 'Invalid hour entry';\n    }\n    \n    const day = hour.day || 'Unknown day';\n    \n    // Handle closed days\n    if (!hour.start || !hour.end || hour.start === 'closed' || hour.end === 'closed') {\n      return `${day}: CLOSED`;\n    }\n    \n    const startTime = formatTime(hour.start);\n    const endTime = formatTime(hour.end);\n    \n    // If both times are invalid, show as closed\n    if (startTime === 'Invalid time' && endTime === 'Invalid time') {\n      return `${day}: CLOSED`;\n    }\n    \n    return `${day}: ${startTime} - ${endTime}`;\n  }).join('\\n');\n}\n\n// Helper function to format time from 24hr to 12hr\nfunction formatTime(time24) {\n  if (!time24 || typeof time24 !== 'string') {\n    return 'Invalid time';\n  }\n  \n  // Handle closed indicator\n  if (time24.toLowerCase() === 'closed') {\n    return 'CLOSED';\n  }\n  \n  const parts = time24.split(':');\n  if (parts.length !== 2) {\n    return time24; // Return as-is if not in expected format\n  }\n  \n  const [hours, minutes] = parts;\n  const hour = parseInt(hours);\n  if (isNaN(hour)) {\n    return time24; // Return as-is if hour is not a number\n  }\n  \n  const ampm = hour >= 12 ? 'PM' : 'AM';\n  const hour12 = hour % 12 || 12;\n  return `${hour12}:${minutes || '00'} ${ampm}`;\n}"
    },
    {
      "label": "Parsed Hours",
      "autoExpand": false,
      "tableView": true,
      "key": "parsedHours",
      "type": "textarea",
      "input": true,
      "disabled": true,
      "rows": 8,
      "defaultValue": "Click 'Parse Hours' to process your business hours description.",
      "wysiwyg": false,
      "validate": {
        "required": false
      }
    }
  ]
}
